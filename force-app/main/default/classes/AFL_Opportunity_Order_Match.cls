/*---=============================================================================
---                              AFL 
---
---       Program Name          : AFL_Opportunity_Order_Match
---
---       Program Description   : This APEX class tries to match Opportunities to
---                               Orders using the PO Number. This will be a scheduled job.
---                          
---       Date Written          : 07/09/2014 
---
---       Task Number           : US527
---
--------------------------------------------------------------------------------
---       Development And Modification History:
---
--- Task#  Ver# DATE     Developer     DESCRIPTION
--- ----  ---- -------- -------------  ------------------------------
--- US527  1.0  07/09/14  BHATNJA       Initial
---
---       Copyright 2013 AFL 
---=============================================================================*/
global without sharing class AFL_Opportunity_Order_Match implements Schedulable {

    global AFL_Opportunity_Order_Match() {
    }

    global void execute(SchedulableContext SC) {
        Opportunity_Order_Match();
    }

    WebService static String Opportunity_Order_Match() {
        Integer errorCount = 0;
        Integer updateCount = 0;
        String msg;
        List<Opportunity> oppList = new List<Opportunity>();
        //List<Order__c> ordList = new List<Order__c>();
        Map<String, Order__c> poOrdMap = new Map<String, Order__c>();
        List<Opportunity> updList = new List<Opportunity>();
        Order__c ord1;
        
        //for all opportunities with order__c is null and PO Number is not null
        //add to list
        for ( Opportunity opp : [Select Customer_PO_Number__c,
                                        AccountId,      
                                        Account.ParentId,
                                        Name,
                                        Id
                                 From Opportunity
                                 where order__c = null
                                 and   Customer_PO_Number__c != null
                                ] ) {
            oppList.add(opp);       

        }
        /*
        //for all opportunities with order__c is null and PO Number is not null and Parent Account is not null
        //add to list
        for ( Opportunity oppParent : [Select Customer_PO_Number__c,
                                        Account.ParentId,      
                                        Name,
                                        Id
                                 From Opportunity
                                 where order__c = null
                                 and   Customer_PO_Number__c != null
                                 and   Account.ParentId != null
                                ] ) {
            oppList.add(oppParent);       

        }
        */
        //Query Latest Orders and add to List
        //create a Map of Account + PO and Order
        for ( Order__c ord : [Select PO_Number__c,                                         
                                     Account__c,
                                     Name,
                                     Id
                              From Order__c
                              where PO_Number__c != null
                              and order_date__c = last_n_days:120
                              //and lastmodifieddate = last_n_days:365
                              order by order_date__c desc
                             ] ) {
            //ordList.add(ord);       
            
            if ( ! poOrdMap.containsKey(ord.Account__c + '<>' + ord.PO_Number__c)) {
                poOrdMap.put(ord.Account__c + '<>' + ord.PO_Number__c, ord);  
            }         

        }
        //if Opp PO and Account matches the Map for Order PO and Account 
        //then update Opp with Order number and mark Opp as Closed - Won
        if ( ! oppList.isEmpty()) {
           for (Opportunity opp1 : oppList) {
               
               ord1 = poOrdMap.get(opp1.AccountId + '<>' + opp1.Customer_PO_Number__c);
               
               if (ord1 != null) {
                  opp1.Order__c = ord1.Id;
                  opp1.StageName = 'Closed - Won';
                  updList.add(opp1);
               }
               //else try the same with Parent Account
               else {
                  if (opp1.Account.ParentId != null) {
                     ord1 = poOrdMap.get(opp1.Account.ParentId + '<>' + opp1.Customer_PO_Number__c);
                  
                     if (ord1 != null) {
                        opp1.Order__c = ord1.Id;
                        opp1.StageName = 'Closed - Won';
                        updList.add(opp1);
                     }
                  }               
               }
           }
        }
        
        msg += '\n\nAuto updating '+updList.size()+' records out of '+oppList.size()+' records.';
        if ( ! updList.isEmpty() ) {
         List<Database.SaveResult> srList = Database.update(updList,false);
         for ( Integer i = 0; i < srList.size(); i++ ) {
             Database.SaveResult sr = srList[i];
             if ( sr.isSuccess() ) {
                 updateCount++;
             } else {
                 errorCount++;
                 if ( errorCount < 50 ) {
                     msg += '\n  '+errorCount+'. '+String.valueOf(updList[i].get('Id'))+': '+sr.getErrors()[0].getMessage();
                 }
             }
         }
        }        
        msg += '\n\nTotal '+updateCount+' records successfully processed. '+errorCount+' errors.';

        return msg;
    }

    public static void testMonkey() {
        Integer i=1;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
        i=2;
        i=3;
    }


}